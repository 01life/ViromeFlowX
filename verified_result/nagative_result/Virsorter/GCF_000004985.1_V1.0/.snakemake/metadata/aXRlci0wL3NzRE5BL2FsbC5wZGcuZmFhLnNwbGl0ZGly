{"version": null, "code": "gASVJQgAAAAAAAAoQxJ0AGQBfA58EWQCjQMBAGQAUwCUKIwFaW5wdXSUjAZvdXRwdXSUjAZwYXJhbXOUjAl3aWxkY2FyZHOUjAd0aHJlYWRzlIwJcmVzb3VyY2VzlIwDbG9nlIwHdmVyc2lvbpSMBHJ1bGWUjAljb25kYV9lbnaUjA1jb250YWluZXJfaW1nlIwQc2luZ3VsYXJpdHlfYXJnc5SMD3VzZV9zaW5ndWxhcml0eZSMC2Vudl9tb2R1bGVzlIwMYmVuY2hfcmVjb3JklIwFam9iaWSUjAhpc19zaGVsbJSMD2JlbmNoX2l0ZXJhdGlvbpSMD2NsZWFudXBfc2NyaXB0c5SMCnNoYWRvd19kaXKUjA1lZGl0X25vdGVib29rlHSUXZQoTljpBgAACiAgICAgICAgIyBtYWtlIHN1cmUgZ3JlcCBjb21tYW5kIGJlbG93IGRvZXMgbm90IGZhaWwgaWYgaW5wdXQgaXMgZW1wdHkKICAgICAgICBzZXQgK28gcGlwZWZhaWwgCgogICAgICAgIExvZz17V2tkaXJ9L2xvZy97VG1wZGlyfS9zdGVwMS1wcC9zcGxpdC1mYWEte3dpbGRjYXJkcy5ncm91cH0ubG9nCiAgICAgICAgR3JvdXBfc3BlY2lmaWNfaG1tZGI9e0RiZGlyfS9ncm91cC97d2lsZGNhcmRzLmdyb3VwfS9jdXN0b21pemVkLmhtbQogICAgICAgIFJic19wZGdfZGI9e0RiZGlyfS9ncm91cC97d2lsZGNhcmRzLmdyb3VwfS9yYnMtcHJvZGlnYWwtdHJhaW4uZGIKICAgICAgICBCbmFtZT0kKGJhc2VuYW1lIHtpbnB1dH0pCgogICAgICAgIHJtIC1mIHtUbXBkaXJ9L3t3aWxkY2FyZHMuZ3JvdXB9L2FsbC5wZGcuZmFhLnNwbGl0ZGlyL2FsbC5wZGcuZmFhLiouc3BsaXQuKi5zcGxpdGhtbXRibAoKICAgICAgICBpZiBbIHtQcm92aXJ1c30gIT0gIlRydWUiIF0gJiYgWyB7TWF4X29yZl9wZXJfc2VxfSAtbmUgLTEgXTsgdGhlbgogICAgICAgICAgICBweXRob24ge1NjcmlwdGRpcn0vc3Vic2FtcGxlLWZhYS5weSB7TWF4X29yZl9wZXJfc2VxfSB7aW5wdXR9ID4ge2lucHV0fS5zcwogICAgICAgIGVsc2UKICAgICAgICAgICAgKGNkIHtUbXBkaXJ9L3t3aWxkY2FyZHMuZ3JvdXB9ICYmIGxuIC1zZiAkQm5hbWUgJEJuYW1lLnNzKQogICAgICAgIGZpCgogICAgICAgIGlmIFsgLXMgJFJic19wZGdfZGIgXSB8fCBbIC1zICRHcm91cF9zcGVjaWZpY19obW1kYiBdOyB0aGVuCiAgICAgICAgICAgIFRvdGFsPSQoZ3JlcCAtdiAnXj4nIHtpbnB1dH0uc3MgfCB3YyAtYykKICAgICAgICAgICAgaWYgWyAkVG90YWwgLWd0IHtGYWFfYnBfcGVyX3NwbGl0fSBdOyB0aGVuCiAgICAgICAgICAgICAgICBweXRob24ge1NjcmlwdGRpcn0vc3BsaXQtc2VxZmlsZS1ldmVuLWJwLXBlci1maWxlLnB5IHtpbnB1dH0uc3Mge291dHB1dH0ge0ZhYV9icF9wZXJfc3BsaXR9ICAmPiAkTG9nIHx8IHt7IGVjaG8gIlNlZSBlcnJvciBkZXRhaWxzIGluICRMb2ciIHwgcHl0aG9uIHtTY3JpcHRkaXJ9L2VjaG8ucHkgLS1sZXZlbCBlcnJvcjsgZXhpdCAxOyB9fQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAjIGl0J3MganVzdCBzbWFsbCBkYXRhc2V0LCBubyBuZWVkIHRvIHNwbGl0CiAgICAgICAgICAgICAgICAjZWNobyAiRGF0YXNldCBpcyBzbWFsbGVyIHRoYW4ge0ZhYV9icF9wZXJfc3BsaXR9YnAsIG5vIG5lZWQgdG8gc3BsaXQiIHwgcHl0aG9uIHtTY3JpcHRkaXJ9L2VjaG8ucHkKICAgICAgICAgICAgICAgIG1rZGlyIC1wIHtvdXRwdXR9CiAgICAgICAgICAgICAgICAoY2Qge291dHB1dH0gJiYgbG4gLXNmIC4uLyRCbmFtZSAkQm5hbWUuMC5zcGxpdCkKICAgICAgICAgICAgZmkKICAgICAgICBlbHNlCiAgICAgICAgICAgICMgdGhlcmUgaXMgbm8gZ3JvdXAgc3BlY2lmaWMgcmJzL2htbWRiIAogICAgICAgICAgICAjZWNobyAie3dpbGRjYXJkcy5ncm91cH0gZG8gbm90IHVzZSBncm91cCBzcGVjaWZpYyByYnMgb3IgaG1tIERCLCBzbyBqdXN0IHVzZSB0aGUgY29tbW9uIGhtbXNlYXJjaCBhbm5vdGF0aW9uOyBza2lwcGluZyB0aGUgZmFhIHNwbGl0IGFuZCBobW1zZWFyY2giIHwgcHl0aG9uIHtTY3JpcHRkaXJ9L2VjaG8ucHkKICAgICAgICAgICAgbWtkaXIgLXAge291dHB1dH0KICAgICAgICAgICAgKGNkIHtvdXRwdXR9ICYmIGxuIC1zZiAuLi8kQm5hbWUgJEJuYW1lLjAuc3BsaXQpCiAgICAgICAgZmkKICAgICAgICCUaA9oEoaUZYwFc2hlbGyUhZR0lC4=", "rule": "split_faa_by_group", "input": ["iter-0/ssDNA/all.pdg.faa"], "log": [], "params": [], "shellcmd": "\n        # make sure grep command below does not fail if input is empty\n        set +o pipefail \n\n        Log=/aimigene/lianglifeng/01.Project/08.virus/reRun/virsorter/GCF_000004985.1_V1.0/log/iter-0/step1-pp/split-faa-ssDNA.log\n        Group_specific_hmmdb=/share/database/VirSorter/db/group/ssDNA/customized.hmm\n        Rbs_pdg_db=/share/database/VirSorter/db/group/ssDNA/rbs-prodigal-train.db\n        Bname=$(basename iter-0/ssDNA/all.pdg.faa)\n\n        rm -f iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.*.split.*.splithmmtbl\n\n        if [ True != \"True\" ] && [ -1 -ne -1 ]; then\n            python /share/app/miniconda3/envs/virome/lib/python3.8/site-packages/virsorter/./scripts/subsample-faa.py -1 iter-0/ssDNA/all.pdg.faa > iter-0/ssDNA/all.pdg.faa.ss\n        else\n            (cd iter-0/ssDNA && ln -sf $Bname $Bname.ss)\n        fi\n\n        if [ -s $Rbs_pdg_db ] || [ -s $Group_specific_hmmdb ]; then\n            Total=$(grep -v '^>' iter-0/ssDNA/all.pdg.faa.ss | wc -c)\n            if [ $Total -gt 10000000 ]; then\n                python /share/app/miniconda3/envs/virome/lib/python3.8/site-packages/virsorter/./scripts/split-seqfile-even-bp-per-file.py iter-0/ssDNA/all.pdg.faa.ss iter-0/ssDNA/all.pdg.faa.splitdir 10000000  &> $Log || { echo \"See error details in $Log\" | python /share/app/miniconda3/envs/virome/lib/python3.8/site-packages/virsorter/./scripts/echo.py --level error; exit 1; }\n            else\n                # it's just small dataset, no need to split\n                #echo \"Dataset is smaller than 10000000bp, no need to split\" | python /share/app/miniconda3/envs/virome/lib/python3.8/site-packages/virsorter/./scripts/echo.py\n                mkdir -p iter-0/ssDNA/all.pdg.faa.splitdir\n                (cd iter-0/ssDNA/all.pdg.faa.splitdir && ln -sf ../$Bname $Bname.0.split)\n            fi\n        else\n            # there is no group specific rbs/hmmdb \n            #echo \"ssDNA do not use group specific rbs or hmm DB, so just use the common hmmsearch annotation; skipping the faa split and hmmsearch\" | python /share/app/miniconda3/envs/virome/lib/python3.8/site-packages/virsorter/./scripts/echo.py\n            mkdir -p iter-0/ssDNA/all.pdg.faa.splitdir\n            (cd iter-0/ssDNA/all.pdg.faa.splitdir && ln -sf ../$Bname $Bname.0.split)\n        fi\n        ", "incomplete": false, "starttime": 1705718421.7398267, "endtime": 1705718421.9526556, "job_hash": 8751720550868, "conda_env": null, "container_img_url": null}