{"version": null, "code": "gASVxwoAAAAAAAAoQxJ0AGQBfA58EWQCjQMBAGQAUwCUKIwFaW5wdXSUjAZvdXRwdXSUjAZwYXJhbXOUjAl3aWxkY2FyZHOUjAd0aHJlYWRzlIwJcmVzb3VyY2VzlIwDbG9nlIwHdmVyc2lvbpSMBHJ1bGWUjAljb25kYV9lbnaUjA1jb250YWluZXJfaW1nlIwQc2luZ3VsYXJpdHlfYXJnc5SMD3VzZV9zaW5ndWxhcml0eZSMC2Vudl9tb2R1bGVzlIwMYmVuY2hfcmVjb3JklIwFam9iaWSUjAhpc19zaGVsbJSMD2JlbmNoX2l0ZXJhdGlvbpSMD2NsZWFudXBfc2NyaXB0c5SMCnNoYWRvd19kaXKUjA1lZGl0X25vdGVib29rlHSUXZQoTliLCQAACiAgICAgICAgRG9tYWluPXt3aWxkY2FyZHMuZG9tYWlufQogICAgICAgIEdyb3VwX3NwZWNpZmljX2htbWRiPXtEYmRpcn0vZ3JvdXAve3dpbGRjYXJkcy5ncm91cH0vY3VzdG9taXplZC5obW0KICAgICAgICBSYnNfcGRnX2RiPXtEYmRpcn0vZ3JvdXAve3dpbGRjYXJkcy5ncm91cH0vcmJzLXByb2RpZ2FsLXRyYWluLmRiCgogICAgICAgIGlmIFsgJERvbWFpbiA9ICJWaXJ1c2VzIiBdOyB0aGVuCiAgICAgICAgICAgIGlmIFsgLXMgJEdyb3VwX3NwZWNpZmljX2htbWRiIF07IHRoZW4KICAgICAgICAgICAgICAgIEhtbWRiPSRHcm91cF9zcGVjaWZpY19obW1kYgogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICBIbW1kYj17RGJkaXJ9L2htbS92aXJhbC9jb21iaW5lZC5obW0KICAgICAgICAgICAgZmkKICAgICAgICBlbHNlCiAgICAgICAgICAgIERvbWFpbjI9JERvbWFpbgogICAgICAgICAgICBpZiBbICREb21haW4yID0gIlBmYW12aXJ1c2VzIiBdOyB0aGVuCiAgICAgICAgICAgICAgICBEb21haW4yPVZpcnVzZXMKICAgICAgICAgICAgZmkKICAgICAgICAgICAgSG1tZGI9e0RiZGlyfS9obW0vcGZhbS9QZmFtLUEtIiREb21haW4yIi5obW0KICAgICAgICBmaQoKICAgICAgICBpZiBbIC1zICRSYnNfcGRnX2RiIF0gfHwgWyAtcyAkR3JvdXBfc3BlY2lmaWNfaG1tZGIgXTsgdGhlbgogICAgICAgICAgICBUb19zY3JhdGNoPWZhbHNlCiAgICAgICAgICAgIEJuYW1lPSQoYmFzZW5hbWUge2lucHV0fSkKICAgICAgICAgICAgIyBtb3ZlIHRoZSBoZWF2eSBJTyBvZiBobW1zZWFyY2ggaW4gbG9jYWwgc2NyYXRjaAogICAgICAgICAgICBpZiBbIC1kICJ7TG9jYWxfc2NyYXRjaH0iIF07IHRoZW4KICAgICAgICAgICAgICAgICMgbm90IHN1cmUgZGYgb3IgZHUgYXJlIGNvbXBhdGlibGUgaW4gYWxsIGxpbnV4OyB1c2UgInx8VG9fc2NyYXRjaD1mYWxzZSIgCiAgICAgICAgICAgICAgICAjICAgdG8gcHJldmVudCBpbWNvbXBhdGliaWxpdHkgaW4gc29tZSBsaW51eCBkaXN0cm8KICAgICAgICAgICAgICAgIFRtcD0kKG1rdGVtcCAtZCB7TG9jYWxfc2NyYXRjaH0vdnMyLVhYWFhYWFhYWFhYWCkgJiYgVG9fc2NyYXRjaD10cnVlIHx8IFRvX3NjcmF0Y2g9ZmFsc2UKICAgICAgICAgICAgICAgIEF2YWlsPSQoZGYgLVAge0xvY2FsX3NjcmF0Y2h9IHwgYXdrICdFTkR7e3ByaW50ICQ0fX0nKSB8fCBUb19zY3JhdGNoPWZhbHNlCiAgICAgICAgICAgICAgICBGc2l6ZT0kKGR1IC1rIHtpbnB1dH0gfCBhd2sgJ3t7cHJpbnQgJDEqNX19JykgfHwgVG9fc2NyYXRjaD1mYWxzZQogICAgICAgICAgICAgICAgaWYgWyAiJEF2YWlsIiAtZ3QgIiRGc2l6ZSIgXSAmJiBbICIkVG9fc2NyYXRjaCIgPSAidHJ1ZSIgXTsgdGhlbgogICAgICAgICAgICAgICAgICAgIGNwIHtpbnB1dH0gJFRtcC8kQm5hbWUgfHwgVG9fc2NyYXRjaD1mYWxzZQogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIFRvX3NjcmF0Y2g9ZmFsc2UKICAgICAgICAgICAgICAgIGZpCiAgICAgICAgICAgIGZpCgogICAgICAgICAgICBobW1zZWFyY2ggLWggfCBncmVwICdeIyBITU1FUicgPiB7b3V0cHV0fS5sb2cKICAgICAgICAgICAgaWYgWyAiJFRvX3NjcmF0Y2giID0gZmFsc2UgXTsgdGhlbgogICAgICAgICAgICAgICAgIyBsb2NhbCBzY3JhdGNoIG5vdCBzZXQgb3Igbm90IGVub3VnaCBzcGFjZSBpbiBsb2NhbCBzY3JhdGNoCiAgICAgICAgICAgICAgICBobW1zZWFyY2ggLVQge0htbXNlYXJjaF9zY29yZV9taW59IC0tdGJsb3V0IHtvdXRwdXR9IC0tY3B1IHt0aHJlYWRzfSAtLW5vYWxpICRIbW1kYiB7aW5wdXR9ID4gL2Rldi9udWxsIDI+PiB7b3V0cHV0fS5sb2cgfHwge3sgZWNobyAiU2VlIGVycm9yIGRldGFpbHMgaW4ge1drZGlyfS97b3V0cHV0fS5sb2ciIHwgcHl0aG9uIHtTY3JpcHRkaXJ9L2VjaG8ucHkgLS1sZXZlbCBlcnJvcjsgZXhpdCAxOyB9fQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAjIHdoZW4gVG9fc2NyYXRjaCBpcyB0cnVlLCBUbXAgYW5kIEJuYW1lIHNob3VsZCBoYXZlIGJlZW4gZGVmaW5lZCBzdWNjZXNzZnVsbHkKICAgICAgICAgICAgICAgIGhtbXNlYXJjaCAtVCB7SG1tc2VhcmNoX3Njb3JlX21pbn0gLS10YmxvdXQge291dHB1dH0gLS1jcHUge3RocmVhZHN9IC0tbm9hbGkgJEhtbWRiICRUbXAvJEJuYW1lID4gL2Rldi9udWxsIDI+PiB7b3V0cHV0fS5sb2cgfHwge3sgZWNobyAiU2VlIGVycm9yIGRldGFpbHMgaW4ge1drZGlyfS97b3V0cHV0fS5sb2ciIHwgcHl0aG9uIHtTY3JpcHRkaXJ9L2VjaG8ucHkgLS1sZXZlbCBlcnJvcjsgZXhpdCAxOyB9fQogICAgICAgICAgICAgICAgcm0gLWYgJFRtcC8kQm5hbWUgJiYgcm1kaXIgJFRtcAogICAgICAgICAgICBmaQogICAgICAgIGVsc2UKICAgICAgICAgICAgdG91Y2gge291dHB1dH0KICAgICAgICBmaQogICAgICAgIJRoD2gShpRljAVzaGVsbJSFlHSULg==", "rule": "hmmsearch_by_group", "input": ["iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.0.split"], "log": [], "params": [], "shellcmd": "\n        Domain=Viruses\n        Group_specific_hmmdb=/share/database/VirSorter/db/group/ssDNA/customized.hmm\n        Rbs_pdg_db=/share/database/VirSorter/db/group/ssDNA/rbs-prodigal-train.db\n\n        if [ $Domain = \"Viruses\" ]; then\n            if [ -s $Group_specific_hmmdb ]; then\n                Hmmdb=$Group_specific_hmmdb\n            else\n                Hmmdb=/share/database/VirSorter/db/hmm/viral/combined.hmm\n            fi\n        else\n            Domain2=$Domain\n            if [ $Domain2 = \"Pfamviruses\" ]; then\n                Domain2=Viruses\n            fi\n            Hmmdb=/share/database/VirSorter/db/hmm/pfam/Pfam-A-\"$Domain2\".hmm\n        fi\n\n        if [ -s $Rbs_pdg_db ] || [ -s $Group_specific_hmmdb ]; then\n            To_scratch=false\n            Bname=$(basename iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.0.split)\n            # move the heavy IO of hmmsearch in local scratch\n            if [ -d \"/tmp\" ]; then\n                # not sure df or du are compatible in all linux; use \"||To_scratch=false\" \n                #   to prevent imcompatibility in some linux distro\n                Tmp=$(mktemp -d /tmp/vs2-XXXXXXXXXXXX) && To_scratch=true || To_scratch=false\n                Avail=$(df -P /tmp | awk 'END{print $4}') || To_scratch=false\n                Fsize=$(du -k iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.0.split | awk '{print $1*5}') || To_scratch=false\n                if [ \"$Avail\" -gt \"$Fsize\" ] && [ \"$To_scratch\" = \"true\" ]; then\n                    cp iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.0.split $Tmp/$Bname || To_scratch=false\n                else\n                    To_scratch=false\n                fi\n            fi\n\n            hmmsearch -h | grep '^# HMMER' > iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.0.split.Viruses.splithmmtbl.log\n            if [ \"$To_scratch\" = false ]; then\n                # local scratch not set or not enough space in local scratch\n                hmmsearch -T 30 --tblout iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.0.split.Viruses.splithmmtbl --cpu 2 --noali $Hmmdb iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.0.split > /dev/null 2>> iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.0.split.Viruses.splithmmtbl.log || { echo \"See error details in /aimigene/lianglifeng/01.Project/08.virus/reRun/virsorter/GCF_000004985.1_V1.0/iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.0.split.Viruses.splithmmtbl.log\" | python /share/app/miniconda3/envs/virome/lib/python3.8/site-packages/virsorter/./scripts/echo.py --level error; exit 1; }\n            else\n                # when To_scratch is true, Tmp and Bname should have been defined successfully\n                hmmsearch -T 30 --tblout iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.0.split.Viruses.splithmmtbl --cpu 2 --noali $Hmmdb $Tmp/$Bname > /dev/null 2>> iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.0.split.Viruses.splithmmtbl.log || { echo \"See error details in /aimigene/lianglifeng/01.Project/08.virus/reRun/virsorter/GCF_000004985.1_V1.0/iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.0.split.Viruses.splithmmtbl.log\" | python /share/app/miniconda3/envs/virome/lib/python3.8/site-packages/virsorter/./scripts/echo.py --level error; exit 1; }\n                rm -f $Tmp/$Bname && rmdir $Tmp\n            fi\n        else\n            touch iter-0/ssDNA/all.pdg.faa.splitdir/all.pdg.faa.0.split.Viruses.splithmmtbl\n        fi\n        ", "incomplete": false, "starttime": 1705718422.2055333, "endtime": 1705718422.2500823, "job_hash": 8751717836868, "conda_env": null, "container_img_url": null}